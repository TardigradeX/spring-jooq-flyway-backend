buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "nu.studer:gradle-jooq-plugin:2.0.6"
        classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.2.0"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.flywaydb.flyway'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework:spring-jdbc")
    runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')
    jooqRuntime ('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
	spring(sourceSets.main) {
		jdbc {
			driver = 'org.h2.Driver'
			url = 'jdbc:h2:./theDatabase'
			user = 'backend'
			password = 'test'
		}
		generator {
			name = 'org.jooq.util.DefaultGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.util.h2.H2Database'
				inputSchema = 'PUBLIC'
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = false
				fluentSetters = true
			}
			target {
				packageName = 'generated'
				directory = 'src/main/java/com/spring_backend/repository'
			}
		}
	}
}
flyway {
    url = 'jdbc:h2:./theDatabase'
    user = 'backend'
    password = 'test'
    schemas = ['PUBLIC']
    locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

generateSpringJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean


